apply plugin: 'com.android.application'
apply plugin: 'checkstyle'

task checkstyle(type: Checkstyle) {
    configFile = rootProject.file('config/checkstyle.xml')

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    classpath = files()
}

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "es.voghdev.prjdagger2"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String","DEFAULT_USER","\"\"")
            buildConfigField "String", "DEFAULT_PASSWORD", "\"\""
        }

        debug {
            buildConfigField("String", "DEFAULT_USER", "\"autoassigned_user@example.com\"")
            buildConfigField "String", "DEFAULT_PASSWORD", "\"4notherWay0fD3finingBuildC0nfigVars\""
        }
    }

    flavorDimensions "default"

    productFlavors {
        prod {
            Properties prop = new Properties();
            prop.load(project.rootProject.file('dev.properties').newDataInputStream())
            def iv = prop.get("iv", null)
            def secretKey = prop.get("secretKey", null)
            def root = "https://api.randomuser.me/"
            buildConfigField("String", "ROOT_URL", "\"${root}\"")
            buildConfigField("String", "IV", iv)
            buildConfigField("String", "SECRET_KEY", secretKey)
        }
        cpws {
            Properties prop = new Properties();
            prop.load(project.rootProject.file('dev.properties').newDataInputStream())
            def iv = prop.get("iv", null)
            def secretKey = prop.get("secretKey", null)
            def root = "http://add.your.test.server.location/here"
            buildConfigField("String", "ROOT_URL", "\"${root}\"")
            buildConfigField("String", "IV", iv)
            buildConfigField("String", "SECRET_KEY", secretKey)
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.android.support:design:27.1.0'
    implementation 'com.google.dagger:dagger:2.11'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.11'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.jakewharton:butterknife:6.0.0'
    annotationProcessor 'com.jakewharton:butterknife:6.0.0'
    implementation 'com.github.pedrovgs:renderers:2.0.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.3.21"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.21"

    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:1.10.19"
}
